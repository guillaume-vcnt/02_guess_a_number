player2Container.style.display = "none";

startButton.addEventListener("click", function () {
  valuePlayer1 = parseInt(player1.value);
  console.log("ü•á", valuePlayer1);
  if (valuePlayer1 < 1 || valuePlayer1 > 50 || isNaN(valuePlayer1)) {
    let alertIsOn = document.querySelector("#alert-message");
    if (alertIsOn !== null) alertIsOn.remove();
    let newElmAlert = document.createElement("p");
    newElmAlert.setAttribute("id", "alert-message");
    newElmAlert.textContent = "Choose a valid number !";
    newElmAlert.style.color = "red";
    newElmAlert.style.alignSelf = "center";
    newElmAlert.style.textTransform = "uppercase";
    mainContainer.appendChild(newElmAlert);
  } else {
    let alertIsOn = document.querySelector("#alert-message");
    if (alertIsOn !== null) alertIsOn.remove();
    player1Container.style.display = "none";
    player2Container.style.display = "flex";
  }
});

tryButton.addEventListener("click", function () {
  let valuePlayer2 = parseInt(player2.value);
  console.log("ü•à", valuePlayer2);
  if (valuePlayer2 < 1 || valuePlayer2 > 50 || isNaN(valuePlayer2)) {
    let alertIsOn = document.querySelector("#alert-message");
    if (alertIsOn !== null) alertIsOn.remove();
    let newElmAlert = document.createElement("p");
    newElmAlert.setAttribute("id", "alert-message");
    newElmAlert.textContent = "Choose a valid number !";
    newElmAlert.style.color = "red";
    newElmAlert.style.alignSelf = "center";
    newElmAlert.style.textTransform = "uppercase";
    mainContainer.appendChild(newElmAlert);
  } else {
    let alertIsOn = document.querySelector("#alert-message");
    if (alertIsOn !== null) alertIsOn.remove();
    matchNumber(valuePlayer1, valuePlayer2);
  }
});

// Note : Un param√®tre Javascript ne fait que stocker la valeur qui lui est pass√©e au moment de l'appel d'une fonction. Il ne garde pas d'information au-del√† de cette ex√©cution, √† moins qu'il ne stocke cette valeur ailleurs, par exemple dans une variable globale, un objet, ou une base de donn√©es.

//Note : La fonction isNaN() peut √™tre utilis√©e pour v√©rifier si une valeur est un "Not-a-Number" (NaN), ce qui inclut les cas o√π l'input est vide. En JavaScript, lorsqu'un champ de saisie (input) est vide, il est trait√© comme une cha√Æne vide "", qui, lorsqu'elle est convertie en nombre avec parseInt(), donne NaN.
